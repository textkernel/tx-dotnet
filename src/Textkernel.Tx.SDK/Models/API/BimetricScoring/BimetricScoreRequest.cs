// Copyright Â© 2020 Sovren Group, Inc. All rights reserved.
// This file is provided for use by, or on behalf of, Sovren licensees
// within the terms of their license of Sovren products or Sovren customers
// within the Terms of Service pertaining to the Sovren SaaS products.

using Sovren.Models.API.Matching;
using Sovren.Models.API.Matching.Request;
using Sovren.Models.Job;
using Sovren.Models.Resume;
using System.Collections.Generic;

namespace Sovren.Models.API.BimetricScoring
{
    /// <summary>
    /// Request body for a 'BimetricScore' request
    /// </summary>
    public class BimetricScoreRequest
    {
        /// <summary>
        /// The settings to use during scoring calculations
        /// </summary>
        public SearchMatchSettings Settings { get; set; }

        /// <summary>
        /// The weights you want to use for scoring. <b>It is important to specify these, otherwise default
        /// values will be used. </b>
        /// <br/>
        /// <br/>
        /// These weights will be used except in the case
        /// that you provided a non-zero weight for a category that is irrelevant in the source document.
        /// For example, this can happen when the source document contains no languages.
        /// <br/>See also: <seealso cref="BaseScoredResponseValue{T}.AppliedCategoryWeights"/>
        /// </summary>
        public CategoryWeights PreferredCategoryWeights { get; set; }

        /// <summary>
        /// A list of parsed resumes containing the document name/identifier and the parsed resume data.
        /// NOTE: you can only use either this property to score resumes, or <see cref="TargetJobs"/> to score jobs, but not both
        /// </summary>
        public List<ParsedResumeWithId> TargetResumes { get; set; }

        /// <summary>
        /// A list of parsed jobs containing the document name/identifier and the parsed job data.
        ///  NOTE: you can only use either this property to score jobs, or <see cref="TargetResumes"/> to score resumes, but not both
        /// </summary>
        public List<ParsedJobWithId> TargetJobs { get; set; }
    }

    /// <inheritdoc/>
    public class BimetricScoreResumeRequest : BimetricScoreRequest
    {
        /// <summary>
        /// The resume to use as the 'source' document for the bimetric score.
        /// <br/>All the target documents will be scored against this resume.
        /// </summary>
        public ParsedResumeWithId SourceResume { get; set; }
    }

    /// <inheritdoc/>
    public class BimetricScoreJobRequest : BimetricScoreRequest
    {
        /// <summary>
        /// The job to use as the 'source' document for the bimetric score.
        /// <br/>All the target documents will be scored against this job.
        /// </summary>
        public ParsedJobWithId SourceJob { get; set; }
    }

    /// <summary>
    /// Interface to simplify Bimetric Score requests
    /// </summary>
    public interface IParsedDocWithId
    {
        /// <summary>
        /// The id of the document (used in the response body)
        /// </summary>
        string Id { get; }
    }

    /// <summary>
    /// A <see cref="ParsedResume"/> and id pair for a bimetric score request
    /// </summary>
    public class ParsedResumeWithId : IParsedDocWithId
    {
        /// <inheritdoc/>
        public string Id { get; set; }

        /// <summary>
        /// A resume generated by the Sovren parser
        /// </summary>
        public ParsedResume ResumeData { get; set; }
    }

    /// <summary>
    /// A <see cref="ParsedJob"/> and id pair for a bimetric score request
    /// </summary>
    public class ParsedJobWithId : IParsedDocWithId
    {
        /// <inheritdoc/>
        public string Id { get; set; }

        /// <summary>
        /// A job generated by the Sovren parser
        /// </summary>
        public ParsedJob JobData { get; set; }
    }
}
